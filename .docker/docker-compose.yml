version: '3.9'
services:

  # MongoDB
  mongodb:
    image: public.ecr.aws/docker/library/mongo:3.6
    hostname: localmongodb
    networks:
      - local_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    stop_grace_period: 60s
    ports:
      - ${DATABASE_PORT}:27017
    volumes:
      - mongo_volum:/data/mongodb
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localmongodb:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # Mongo Express
  mongo-express:
    image: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=localmongodb
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${DATABASE_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${DATABASE_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${DATABASE_USER}
      - ME_CONFIG_BASICAUTH_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - mongo_volum:/data/mongo-express
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - local_network
    ports:
      - "8081:8081"
    healthcheck:
      test: wget --quiet --tries=3 --spider http://${DATABASE_USER}:${DATABASE_PASSWORD}@mongo-express:8081 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3

  # Console App
  console-app:
    image: golang:latest
    volumes:
      - ../:/go/src
    working_dir: /go/src
    networks:
      - local_network
    depends_on:
      - mongodb
    env_file: .env
    command: >
      sh -c "
      go mod download &&
      go build -o main .&&
      ./main
      "

volumes:
  mongo_volum:

networks:
  local_network:
